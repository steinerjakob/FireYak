name: Android CI/CD Pipeline

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4
      - name: Set up Node
        uses: actions/setup-node@v3
        with:
          node-version: 22
          cache: 'npm'
      - name: Install dependencies
        run: npm install
      - name: Build
        run: npm run buildAndSync
      - name: Set Up JDK 21
        uses: actions/setup-java@v3
        with:
          distribution: 'zulu'
          java-version: '21'
          cache: 'gradle'
      - name: Grant Execute Permission for Gradlew
        working-directory: ./android
        run: chmod +x gradlew
      - name: Bump Android Version Code
        uses: Devofure/advance-android-version-actions@v1.4
        with:
          gradlePath: android/app/build.gradle
          versionName: 2.0.0
      - name: Commit & Push Version Code Change
        run: |
          git config user.name github-actions
          git config user.email github-actions@github.com
          git add android/app/build.gradle
          git commit -m "chore: Bump Android versionCode"
          git push origin HEAD
      - name: Decode Keystore
        working-directory: ./android
        run: |
          echo "${{ secrets.KEYSTORE_FILE }}" | tr -d '\n' | base64 --decode > ./app/keystore.jks
      - name: Verify Keystore
        working-directory: ./android
        run: | 
          ls -la app/keystore.jks
          echo "Keystore file exists and size: $(wc -c < app/keystore.jks) bytes"
          # Test if keystore is valid
          # keytool -list -keystore app/keystore.jks -storepass "${{ secrets.KEYSTORE_PASSWORD }}" -v || echo "Keystore verification failed"

      - name: Build Release APK
        working-directory: ./android
        run: |
          ./gradlew bundleRelease \
            -Pandroid.injected.signing.store.file="$(pwd)/app/keystore.jks" \
            -Pandroid.injected.signing.store.password="${{ secrets.KEYSTORE_PASSWORD }}" \
            -Pandroid.injected.signing.key.alias="${{ secrets.KEY_ALIAS }}" \
            -Pandroid.injected.signing.key.password="${{ secrets.KEY_PASSWORD }}"
      - name: Upload Release APK
        uses: actions/upload-artifact@v4
        with:
          name: release-aab
          path: ./android/app/build/outputs/bundle/release/app-release.aab
      - name: Deploy to Google Play (Beta)
        run: |
          printf '%s\n' '${{ secrets.PLAY_STORE_JSON_KEY }}' > play-credentials.json
          fastlane supply --aab ./android/app/build/outputs/bundle/release/app-release.aab \
                          --track beta
